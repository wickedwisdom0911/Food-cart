{"ast":null,"code":"var _jsxFileName = \"/home/i/Desktop/01-starting-project/src/components/Cart/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingItemIndex];\n    let updatedItems;\n\n    if (existingItem) {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  } else if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    let updatedItems;\n\n    if (existingCartItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","existingItem","updatedItems","updatedItem","amount","concat","updatedTotalAmount","price","existingCartItemIndex","existingCartItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/home/i/Desktop/01-starting-project/src/components/Cart/CartProvider.js"],"sourcesContent":["import { useReducer } from 'react';\n\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n\n       \n     const existingItemIndex=state.items.findIndex(item=>item.id===action.item.id);\n\n     const existingItem=state.items[existingItemIndex];\n     \n     let updatedItems;\n\n     if(existingItem)\n     {\n\n\n     const updatedItem={\n      ...existingItem,\n      amount : existingItem.amount + action.item.amount\n        \n\n     }\n       updatedItems=[...state.items];\n      updatedItems[existingItemIndex]=updatedItem;\n\n\n     }\n     else\n     {\n        updatedItems=state.items.concat(action.item);\n     }\n\n\n\n \n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n\nelse if(action.type==='REMOVE')\n{\n\n\nconst existingCartItemIndex=state.items.findIndex(item=>item.id===action.id);\n\nconst existingCartItem=state.items[existingCartItemIndex];\n\nconst updatedTotalAmount=state.totalAmount - existingCartItem.price;\n\nlet updatedItems;\n\n\nif(existingCartItem.amount===1)\n{\n\n\n  updatedItems=state.items.filter(item=>item.id!==action.id)\n\n\n}\nelse\n{\n\nconst updatedItem={...existingCartItem, amount : existingCartItem.amount-1};\nupdatedItems=[...state.items];\nupdatedItems[existingCartItemIndex]=updatedItem;\n\n}\n\n\nreturn {items : updatedItems , totalAmount : updatedTotalAmount}\n\n\n\n\n\n}\n\n\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type: 'ADD', item: item});\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({type: 'REMOVE', id: id});\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}